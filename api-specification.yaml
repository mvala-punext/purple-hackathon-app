openapi: 3.0.3
info:
  title: Knows You API
  version: 1.0.0
  description: API for the Knows You FE application (public prototype, no authentication required).
servers:
  - url: https://knowsyou.jens.cz
security: []

paths:
  /profiles:
    get:
      summary: Get all user profiles
      description: Returns a list of all user investment profiles.
      operationId: getProfiles
      responses:
        '200':
          description: List of user profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
        '500':
          description: Internal server error

  /profiles/{id}:
    get:
      summary: Get user profile by ID
      description: Returns a specific user's investment profile.
      operationId: getProfileById
      parameters:
        - name: id
          in: path
          required: true
          description: User profile ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: User profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: Profile not found
        '500':
          description: Internal server error

  /profiles/{id}/recommendations:
    get:
      summary: Get financial recommendations for a profile
      description: Returns zero or more AI-generated investment recommendations for the given profile.
      operationId: getRecommendationsByProfile
      parameters:
        - name: id
          in: path
          required: true
          description: User profile ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: List of recommendations
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recommendation'
        '404':
          description: Profile not found
        '500':
          description: Internal server error

  /profiles/{id}/events:
    get:
      summary: Get events for a profile
      description: Returns zero or more detected events (life events or app activity) for the given profile.
      operationId: getEventsByProfile
      parameters:
        - name: id
          in: path
          required: true
          description: User profile ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
        '404':
          description: Profile not found
        '500':
          description: Internal server error

  /profiles/{id}/portfolio:
    get:
      summary: Get portfolio for a profile
      description: Returns the profile's portfolio including total value and list of invested instruments.
      operationId: getPortfolioByProfile
      parameters:
        - name: id
          in: path
          required: true
          description: User profile ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Portfolio details
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalAmount:
                    type: number
                    format: float
                    description: Total amount of the portfolio
                    example: 500.00
                  currency:
                    type: string
                    description: Currency of the portfolio amounts
                    example: "USD"
                  investedInstruments:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvestedInstrument'
        '404':
          description: Profile not found
        '500':
          description: Internal server error

  /trades:
    post:
      summary: Execute a trade from a recommendation
      description: Creates a trade based on a given recommendation ID. Sets recommendation status to ACCEPTED.
      operationId: createTrade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recommendationId
              properties:
                recommendationId:
                  type: string
                  description: ID of the recommendation to execute
                  example: "rec_12345"
      responses:
        '201':
          description: Trade successfully executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
        '400':
          description: Invalid recommendation ID
        '404':
          description: Recommendation not found
        '500':
          description: Internal server error

  /trades/{recommendationId}:
    delete:
      summary: Reject a recommendation
      description: Rejects a recommendation by setting its status to REJECTED.
      operationId: rejectTrade
      parameters:
        - name: recommendationId
          in: path
          required: true
          description: ID of the recommendation to reject
          schema:
            type: string
            example: "rec_12345"
      responses:
        '200':
          description: Recommendation successfully rejected
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  recommendationId:
                    type: string
                    example: "rec_12345"
                  message:
                    type: string
                    example: "Recommendation rejected successfully"
        '400':
          description: Invalid recommendation ID or recommendation already processed
        '404':
          description: Recommendation not found
        '500':
          description: Internal server error

components:
  schemas:
    Recommendation:
      type: object
      required:
        - id
        - type
        - message
        - investmentAmount
        - investmentCurrency
        - investmentInstrument
      properties:
        id:
          type: string
          example: "rec_12345"
        type:
          type: string
          description: Indicates whether the recommendation is to buy or sell
          enum: [buy, sell]
          example: "buy"
        message:
          type: string
          description: Human-readable explanation of the recommendation
          example: "Based on your account activity, you've had $3,200 sitting idle in your checking account..."
        investmentAmount:
          type: number
          format: float
          example: 500
        investmentCurrency:
          type: string
          example: "EUR"
        investmentInstrument:
          type: string
          example: "S&P 500 ETF (VOO)"

    Event:
      type: object
      required:
        - id
        - type
        - title
        - description
        - source
        - date
      properties:
        id:
          type: string
          example: "evt_67890"
        type:
          type: string
          description: Category of the event for frontend rendering (used to determine icon/color)
          enum:
            - relationship
            - purchase
            - sustainability
            - fitness
            - buy_instrument
            - sell_instrument
          example: "buy_instrument"
        title:
          type: string
          description: Name of the event
          example: "Bought a Car"
        description:
          type: string
          description: Explanation of how the event was detected or triggered
          example: "Large transaction detected from bank account"
        source:
          type: string
          description: Origin of the event (system, app, or connected account)
          example: "Bank"
        date:
          type: string
          format: date
          description: Date of the event
          example: "2024-03-15"

    InvestedInstrument:
      type: object
      required:
        - instrument
        - amount
        - currency
      properties:
        instrument:
          type: string
          description: Name of the financial instrument
          example: "S&P 500 ETF (VOO)"
        amount:
          type: number
          format: float
          description: Amount invested in this instrument
          example: 500.00
        currency:
          type: string
          description: Currency of the investment
          example: "USD"

    Trade:
      type: object
      required:
        - tradeId
        - status
        - instrument
        - amount
        - currency
        - type
      properties:
        tradeId:
          type: string
          example: "trade_001"
        status:
          type: string
          description: Status of the executed trade
          enum: [executed, failed]
          example: "executed"
        instrument:
          type: string
          example: "S&P 500 ETF (VOO)"
        amount:
          type: number
          format: float
          example: 500
        currency:
          type: string
          example: "USD"
        type:
          type: string
          enum: [buy, sell]
          example: "buy"

    UserProfile:
      type: object
      required:
        - id
        - firstName
        - lastName
        - age
        - country
        - investmentProfile
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: "František"
        lastName:
          type: string
          example: "Vrána"
        age:
          type: integer
          example: 40
        country:
          type: string
          description: Two-letter country code
          example: "CZ"
        investmentProfile:
          $ref: '#/components/schemas/InvestmentProfile'

    InvestmentProfile:
      type: object
      required:
        - investmentGoal
        - timeHorizon
        - riskTolerance
        - investmentExperience
        - taxResidency
        - annualIncome
        - liquidAssets
        - monthlyInvestmentCapacity
        - occupation
        - dependents
        - financialObligations
        - investmentPreferences
      properties:
        investmentGoal:
          type: string
          description: Primary investment goal
          enum: [retirement, wealth_building, education, home_purchase, other]
          example: "retirement"
        timeHorizon:
          type: integer
          description: Investment time horizon in years
          example: 25
        riskTolerance:
          type: string
          enum: [conservative, moderate, aggressive]
          example: "moderate"
        investmentExperience:
          type: string
          enum: [beginner, intermediate, advanced]
          example: "intermediate"
        taxResidency:
          type: string
          description: Tax residency country code
          example: "CZ"
        annualIncome:
          $ref: '#/components/schemas/MoneyAmount'
        liquidAssets:
          $ref: '#/components/schemas/MoneyAmount'
        monthlyInvestmentCapacity:
          $ref: '#/components/schemas/MoneyAmount'
        occupation:
          type: string
          example: "self-employed"
        dependents:
          type: integer
          description: Number of financial dependents
          example: 2
        financialObligations:
          type: object
          properties:
            mortgage:
              type: boolean
              example: false
            loans:
              type: boolean
              example: false
            emergencyFund:
              type: boolean
              example: true
        investmentPreferences:
          type: object
          properties:
            esgFocused:
              type: boolean
              description: Environmental, Social, and Governance focus
              example: false
            sectors:
              type: array
              description: Preferred investment sectors
              items:
                type: string
              example: []
            avoidSectors:
              type: array
              description: Sectors to avoid
              items:
                type: string
              example: []

    MoneyAmount:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          format: float
          example: 1000000
        currency:
          type: string
          example: "CZK"
